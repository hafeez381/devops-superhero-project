name: Provision t2.micro EC2


on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:
  
jobs:
  terraform:
    runs-on: ubuntu-latest
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
        run:
          shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout repository
        uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_USER_AWS_KEY  }}
          aws-secret-access-key: ${{ secrets.TF_USER_AWS_SECRET }}
          aws-region: us-east-1

      - name: Decode SSH private key
        run: echo "${{ secrets.AWS_SSH_KEY }}" > /tmp/private-key.pem
    
      - name: Set permissions for SSH private key
        run: chmod 600 /tmp/private-key.pem
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

    # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_ssh_private_key_path: /tmp/private-key.pem
          
#      - name: Terraform destroy
#        env:
#          AWS_ACCESS_KEY_ID:
#          AWS_SECRET_ACCESS_KEY:
#        run: terraform destroy -auto-approve -input=false